AWSTemplateFormatVersion: 2010-09-09
Description: A basic codepipeline template for codesecure

Parameters:
  SubnetID:
    Type: String
  Namespace:
    Description: codesecure prefix
    Type: String
    Default: codesecure
Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: codesecure-cluster
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: codesecure-log-group
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: codesecure-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ContainerSecurityGroup
      GroupDescription: Security group for NGINX container
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: codesecure-registry
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: codepipeline-<region>-<AWS Account ID here>
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: codesecure-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: codesecure-role
      ContainerDefinitions:
        - Name: codesecure-container
          Image: nginx:1.17.7
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: Sydney
              awslogs-group: codesecure-loggroup
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - EC2
        - FARGATE
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: codesecure-service
      Cluster: codesecure-cluster
      TaskDefinition: code_secure_task
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            -SubnetID
          SecurityGroups:
            -ContainerSecurityGroup.GroupId
  CloudformationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  CodePipeLineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "${Namespace}-CodePipelineRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
  CodePipeLine:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        Location: codepipeline-<region>-<AWS Account ID here>
        Type: S3
      Name: codesecure-pipeline
      RestartExecutionOnUpdate: False
      RoleArn: 
        Fn::GetAtt: [ CodePipeLineExecutionRole, Arn ]
  Stages:
      - Name: Source
        Actions: 
        - Name: Source
          ActionTypeId:
            Category: Source 
            Owner: ThirdParty 
            Version: 1 
            Provider: GitHub
          OutputArtifacts:
          - Name: staticwebsite
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepo
            Branch: master
            OAuthToken: !Ref GitHubOAuthToken
      - Name: CodeSecure-Scan
        Actions:
        - Name: CodeSecure-Scan
          ActionTypeId:
            Category: Invoke 
            Owner: AWS 
            Version: 1 
            Provider: AWS::ECS
          Configuration:
            FunctionName: TestFargate
      - Name: Deploy
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy 
            Owner: AWS 
            Version: 1 
            Provider: CodeDeploy
          InputArtifacts:
          - Name: staticwebsite
          Configuration:
            ApplicationName: !Ref TestFargate
            DeploymentGroupName: !Ref CodeSecureDeploy
      
            